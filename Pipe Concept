#include<stdio.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<fcntl.h>
#include<string.h>
#include<stdlib.h>
 
 //implementing using ordinary file..
int main( int paramters_to, char* file_path_array[] ) {
    int pipe_corners[2];
    char read_buffer[50];
    char write_buffer[50];
    int file_status;
    int pipe_success;
    pipe_success=pipe( pipe_corners );
    if( paramters_to < 3 ) {
        printf( "Atleast need 2 paramaters.!");
        exit(1);
    }
     if (pipe_success < 0) {
      printf("Something went wrong creating the pipe! %s\n", strerror(errno));
      exit(1);
    }
 
    int source_file = open( file_path_array[1], 0 );
    int destination_file = open( file_path_array[2], 0666 );
     
    if ( source_file == -1 || destination_file == -1 ) {
        printf("Something went wrong.!");
        printf( "Opening file failed.!");
        exit(1);
    }
 
    if( fork() == 0 ) {

        // inside the child process
        close(pipe_corners[1]);
        read(pipe_corners[0], read_buffer, sizeof( read_buffer));
        printf( "The recieved content is : %s", read_buffer );
 
        //Writing to the target source_file
        write( destination_file, read_buffer, strlen( read_buffer ) + 1 );
    } else {
        // inside the parent process
        
        close( pipe_corners[0] );
        // code to read from a text file
 
        while( file_status> 0 ) )  {
        write(pipe_corners[1], read_buffer, sizeof(read_buffer));
        file_status = read( source_file, read_buffer, sizeof( read_buffer ));
        }
        close( pipe_corners[1] );
        //closing the pipe corner.
    }
}
